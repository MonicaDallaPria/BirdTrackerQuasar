import{a5 as l,c as s,h as d,g as p}from"./index.05142272.js";import{c as o,h as n}from"./QIcon.347d01c7.js";import{u as c,a as h}from"./use-dark.f083aa67.js";const y=l("bird",{state:()=>({birdName:"",countrySpotted:"",wikipediaTitle:"",wikipediaText:"",wikipediaImage:"",birdIsAlreadySpotted:!1,birdIsOnFutureSpotterList:!1,birdsSpotted:[],birdsOnWatchlist:[]}),actions:{saveBird(t){this.birdName=t},saveWikiSearchTitle(t){this.wikipediaTitle=t},saveWikiText(t){this.wikipediaText=t},saveWikiImage(t){this.wikipediaImage=t},saveCountry(t){this.countrySpotted=t},setBirdBackToNotSpottedOrWatched(){this.birdIsAlreadySpotted=!1,this.birdIsOnFutureSpotterList=!1},birdsToSpot(){const t={title:"",text:"",image:"",country:"",birdIsAlreadySpotted:!1,birdIsOnFutureSpotterList:!1};t.title=this.wikipediaTitle,t.text=this.wikipediaText,t.image=this.wikipediaImage,t.country=this.countrySpotted,this.birdsSpotted.push(t),this.birdIsAlreadySpotted=!0},addBirdToSpotted(){const t={title:"",text:"",image:"",country:"",birdIsAlreadySpotted:!1,birdIsOnFutureSpotterList:!1};t.title=this.wikipediaTitle,t.text=this.wikipediaText,t.image=this.wikipediaImage,t.country=this.countrySpotted,this.birdsSpotted.push(t),this.birdIsAlreadySpotted=!0},birdsToWatch(){const t={title:"",text:"",image:"",country:""};t.title=this.wikipediaTitle,t.text=this.wikipediaText,t.image=this.wikipediaImage,t.country=this.countrySpotted,this.birdsOnWatchlist.push(t),this.birdIsOnFutureSpotterList=!0},birdHasBeenSpottedFromList(t,i,a,r){const e={title:"",text:"",image:"",country:"",birdIsAlreadySpotted:!1,birdIsOnFutureSpotterList:!1};e.title=t,e.text=i,e.image=a,e.country=r,this.birdsSpotted.push(e),this.birdIsAlreadySpotted=!0;const u=this.birdsOnWatchlist.indexOf(e);this.birdsOnWatchlist.splice(u,1)}}});var k=o({name:"QCardSection",props:{tag:{type:String,default:"div"},horizontal:Boolean},setup(t,{slots:i}){const a=s(()=>`q-card__section q-card__section--${t.horizontal===!0?"horiz row no-wrap":"vert"}`);return()=>d(t.tag,{class:a.value},n(i.default))}}),f=o({name:"QCard",props:{...c,tag:{type:String,default:"div"},square:Boolean,flat:Boolean,bordered:Boolean},setup(t,{slots:i}){const{proxy:{$q:a}}=p(),r=h(t,a),e=s(()=>"q-card"+(r.value===!0?" q-card--dark q-dark":"")+(t.bordered===!0?" q-card--bordered":"")+(t.square===!0?" q-card--square no-border-radius":"")+(t.flat===!0?" q-card--flat no-shadow":""));return()=>d(t.tag,{class:e.value},n(i.default))}});export{k as Q,f as a,y as u};
